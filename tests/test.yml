# Copyright Â© 2017 Joseph Wright <joseph@cloudboss.co>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
---
- hosts: localhost
  vars:
    empty_camel: '{{ "" | camel_to_snake }}'
    empty_camel_dict: '{{ {} | camel_to_snake }}'
    empty_camel_list: '{{ [] | camel_to_snake }}'
    camel: '{{ "camelCaseStringue" | camel_to_snake }}'
    camel_dict: '{{ {"camelKey": [1, 2, 3], "anotherCamelKey": [1, 2, 3]} | camel_to_snake }}'
    nested_camel_dict: '{{ {"camelKey": {"camelCamelKey": 100}} | camel_to_snake }}'
    camel_list: '{{ [{"camelKey": 100}, {"anotherKey": "helloThere"}] | camel_to_snake }}'
    pascal: '{{ "PascalCaseStringue" | camel_to_snake }}'
    pascal_dict: '{{ {"PascalKey": [1, 2, 3], "AnotherPascalKey": [1, 2, 3]} | camel_to_snake }}'
    nested_pascal_dict: '{{ {"PascalKey": {"AnotherPascalKey": 100}} | camel_to_snake }}'
    pascal_list: '{{ [{"PascalKey": 100}, {"AnotherKey": "helloThere"}] | camel_to_snake }}'
    empty_snake: '{{ "" | snake_to_camel }}'
    empty_snake_dict: '{{ {} | snake_to_camel }}'
    empty_snake_list: '{{ [] | snake_to_camel }}'
    snake_one: '{{ "snake_case_stringue" | snake_to_camel }}'
  tasks:
    - name: test snakes and camels
      debug:
        var: camel
    - name: test snakes and camels
      assert:
        that:
          - '{{ empty_camel == "" }}'
          - '{{ empty_camel_dict == {} }}'
          - '{{ empty_camel_list == [] }}'
          - '{{ camel == "camel_case_stringue" }}'
          - '{{ camel_dict == {"camel_key": [1, 2, 3], "another_camel_key": [1, 2, 3]} }}'
          - '{{ nested_camel_dict == {"camel_key": {"camel_camel_key": 100}} }}'
          - '{{ camel_list == [{"camel_key": 100}, {"another_key": "helloThere"}] }}'
          - '{{ pascal == "pascal_case_stringue" }}'
          - '{{ pascal_dict == {"pascal_key": [1, 2, 3], "another_pascal_key": [1, 2, 3]} }}'
          - '{{ nested_pascal_dict == {"pascal_key": {"another_pascal_key": 100}} }}'
          - '{{ pascal_list == [{"pascal_key": 100}, {"another_key": "helloThere"}] }}'
          - '{{ empty_snake == "" }}'
          - '{{ empty_snake_dict == {} }}'
          - '{{ empty_snake_list == [] }}'
          - '{{ snake_one == "snakeCaseStringue" }}'
